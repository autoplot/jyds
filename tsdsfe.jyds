###################################################
# title: tsds client
# label: tsds client

from org.virbo.dataset import SemanticOps   # soon this import will no longer be necessary.
labelsDataset= labels  # rename the labels function.

tr         = getParam( 'timerange', '1997-08-26/1997-09-05', 'timerange to load' )
catalog    = getParam( 'catalog', 'SSCWeb', 'catalog' )
dataset    = getParam( 'dataset', 'ace', 'dataset' )
parameters = getParam( 'parameters', 'X_GEO', 'parameters' )
server     = getParam( 'server', 'http://tsds.org/get/' )
units      = getParam( 'units', 'R_E' )
usecache   = getParam( 'usecache', 'true' )
labels     = getParam( 'labels', '' )
title      = getParam( 'title', 'def' )
fills      = getParam( 'fills', '-1e31')
fills      = float(fills)
process= getParam( 'process', '', 'process to apply to the data', ['','histogram','magnitude(fft)'] )

if ( title=='def' ):
  title= 'catalog: ' + catalog + ' | dataset: ' + dataset #+ ' | parameters: ' + parameters
print 'v20150720_0606'
#print parameters

drtr  = DatumRangeUtil.parseTimeRange(tr)
tf    = TimeParser.create('$Y-$m-$d')
start = tf.format( drtr.min(), None )
#stop  = tf.format( TimeUtil.ceil( TimeUtil.DAY, drtr.max() ) )
stop  = tf.format( drtr.max(), None )
t     = tf.format( TimeUtil.next( TimeUtil.DAY ,drtr.max() ) )
if ( t!=stop ): stop= t

surl = server + "?" + "catalog=" + catalog + "&dataset=" + dataset + "&parameters=" + parameters + "&start=" + start + "&stop=" + stop + "&outformat=1&stream=true&usecache="+usecache
#print surl

f = downloadResourceAsTempFile( URL( surl ), monitor ) 
print f

try:
   #print 'labels', labels
   if ( len(labels)==0 ):
      ll= parameters.split(',')  
   else:
      ll= labels.split(',') 
   llds= labelsDataset(ll)
   result= getDataSet( 'vap+dat:file://'+f.toString()+'?bundle=1:&depend0=field0' )
   result.putProperty( QDataSet.DEPEND_1, llds )
   result.putProperty( QDataSet.TITLE, title )
   result.putProperty( QDataSet.FILL_VALUE, fills )   
   result.putProperty( QDataSet.UNITS, SemanticOps.lookupUnits(units) )
   result.putProperty( QDataSet.LABEL, labels )

except org.virbo.datasource.HtmlResponseIOException,ex:
   raise org.das2.dataset.NoDataInIntervalException('No data in interval')
   #raise java.io.FileNotFoundException('Data Set is Empty')
except java.lang.IllegalArgumentException, ex:
   raise org.das2.dataset.NoDataInIntervalException('No data in interval')

if ( process=='histogram' ):
    result= autoHistogram(result)
elif ( process=='magnitude(fft)' ):
    if ( result.rank()==2 ): result= result[:,0]
    result= magnitude(fft(result))

# done
