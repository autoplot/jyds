# read GPX file created by MyTracks app.

from javax.xml.parsers import ParserConfigurationException
from javax.xml.parsers import DocumentBuilderFactory
from javax.xml.xpath import XPath
from javax.xml.xpath import XPathExpressionException
from javax.xml.xpath import XPathFactory
from javax.xml.xpath import XPathConstants
from org.xml.sax import InputSource
from org.das2.qds import DDataSet

from java.io import File, FileInputStream

resourceURI= getParam( 'resourceURI', 'http://developer.garmin.com/downloads/connect-api/sample_file.gpx', 'example file to load' )

ff= downloadResourceAsTempFile(URL(resourceURI),monitor)

myin= FileInputStream( ff )

builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()
source = InputSource( myin )
initialDocument = builder.parse(source)

factory= XPathFactory.newInstance()
xpath= factory.newXPath()

times= xpath.evaluate( '/gpx/trk/trkseg/trkpt/time/text()', initialDocument, XPathConstants.NODESET )
eles= xpath.evaluate( '/gpx/trk/trkseg/trkpt/ele/text()', initialDocument, XPathConstants.NODESET )
lats= xpath.evaluate( '/gpx/trk/trkseg/trkpt/@lat', initialDocument, XPathConstants.NODESET )
lons= xpath.evaluate( '/gpx/trk/trkseg/trkpt/@lon', initialDocument, XPathConstants.NODESET )

dsb= DataSetBuilder( 2, times.length, 4 )
dsb.setName(0,'time'); dsb.setUnits(0,Units.t2000)
dsb.setName(1,'alt');  dsb.setUnits(1,Units.meters)
dsb.setName(2,'lat');  dsb.setUnits(2,Units.degrees)
dsb.setName(3,'lon');  dsb.setUnits(3,Units.degrees)
dsb.setFillValue(-9999)

for i in xrange(times.length):
    dsb.nextRecord( [ times.item(i).nodeValue,
                      eles.item(i).nodeValue, 
                      lats.item(i).nodeValue, 
                      lons.item(i).nodeValue ] )

ds= dsb.getDataSet()
alt= link( ds[:,0], ds[:,1] )
lat= link( ds[:,0], ds[:,2] )
lon= link( ds[:,0], ds[:,3] )
result= link( lon, lat )

